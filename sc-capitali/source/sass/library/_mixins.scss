
@mixin clearfix {
  &:before,
  &:after {
    content: ' ';
    display: table;
  }
  &:after {
    clear: both;
  }
}

// https://hugogiraudel.com/2013/03/18/ultimate-rem-mixin/
@mixin rem($property, $values) {
  $px: ();
  $rem: (); 
  @each $value in $values {
    @if $value == 0 or $value == auto {
      $px: append($px, $value);
			$rem: append($rem, $value);
    } @else {
      $unit: unit($value);
      $val: parseInt($value);
      @if $unit == 'px' {
        $px: append($px, $value);
        $rem: append($rem, ($val / 10 + rem));
      }
      @if $unit == 'rem' {
        $px: append($px, ($val * 10 + px));
        $rem: append($rem, $value);
      }
    }
  }
  @if $px == $rem {
    #{$property}: $px;
  } @else {
    #{$property}: $px;
    #{$property}: $rem;
  }
}

@mixin img-responsive {
  display: block;
  height: auto;
  max-width: 100%;
}

@mixin aspect-ratio($width, $height, $content: '.content') {
  position: relative;
  &::before {
    display: block;
    content: '';
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  >#{$content} {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

@mixin arrow($direction, $color, $size) {
  content: '';
  display: block;
  height: 0;
  width: 0;
  @if $direction == 'top' {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  }
  @else if $direction == 'right' {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  }
  @else if $direction == 'bottom' {
    border-top: $size solid $color;
    border-right: $size solid transparent;
    border-left: $size solid transparent;
  }
  @else if $direction == 'left' {
    border-top: $size solid transparent;
    border-right: $size solid $color;
    border-bottom: $size solid transparent;
  }
  @else if $direction == 'top-left' {
    border-top: $size solid $color;
    border-right: $size solid transparent;
  }
  @else if $direction == 'top-right' {
    border-top: $size solid $color;
    border-left: $size solid transparent;
  }
  @else if $direction == 'bottom-left' {
    border-bottom: $size solid $color;
    border-right: $size solid transparent;
  }
  @else if $direction == 'bottom-right' {
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
  }
}

@mixin hover() {
  &:hover,
  &:focus,
  &:active {
    @content;
  }
}

@mixin ps-letter-tracking($amount) {
  letter-spacing:$amount / 1000 + em;
}

@mixin inset-border($inset_amount: 5px, $inset_color: rgba(#fff, .3)) {
  position: relative;
  &::after {
    background: transparent;
    border: 1px solid #{$inset_color};
    content: '';
    display: block;
    height: calc(100% - #{$inset_amount * 2});
    left: $inset_amount;
    pointer-events: none;
    position: absolute;
    top: $inset_amount;
    transition: background 250ms ease;
    width: calc(100% - #{$inset_amount * 2});
  }
}

@mixin offset-border($offset_amount: 10px, $offset_color: $neutral-5 ) {
	position: relative;
	width: calc(100% - #{$offset_amount});
	&::after {
		clip-path: polygon(
			calc(100% - #{$offset_amount}) 0,
			100% 0,
			100% 100%,
			0 100%,
			0 calc(100% - #{$offset_amount}),
			calc(100% - #{$offset_amount}) calc(100% - #{$offset_amount})
		);
		content: '';
		display: block;
		border: 1px solid #{$offset_color};
		height: 100%;
		left: $offset_amount;
		position: absolute;
		top: $offset_amount;
		width: 100%;
	}
}

@mixin title-decoration($font_size: 2.2rem, $decoration_width: 3px, $decoration_gap: 10px) {
	padding-left: $decoration_gap;
	position: relative;
	&::before {
		background: $primary-color;
		content: '';
		display: block;
		position: absolute;
		height: $font_size * $bebas-glyph-ratio;
		left: 0;
		top: $font_size * $bebas-top-ratio;
		width: $decoration_width;
	}
}

@mixin sr-only {
	border: 0;
	clip: rect(0, 0, 0, 0);
	height: 1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	white-space: nowrap;
	width: 1px;
}

@mixin sr-only-focusable {
	&:active,
	&:focus {
	  clip: auto;
	  height: auto;
	  overflow: visible;
	  position: static;
	  width: auto;
	  white-space: normal;
	}
}
